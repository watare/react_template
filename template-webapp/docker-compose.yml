version: '3.8'

services:
  # PostgreSQL - Base relationnelle (Users, RBAC, Audit)
  postgres:
    image: postgres:15-alpine
    container_name: template_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-template_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Apache Jena Fuseki - Triple Store RDF
  fuseki:
    image: stain/jena-fuseki:latest
    container_name: template_fuseki
    restart: unless-stopped
    environment:
      ADMIN_PASSWORD: ${FUSEKI_ADMIN_PASSWORD:-admin}
      JVM_ARGS: "-Xmx2G -Xms1G"
    volumes:
      - fuseki_data:/fuseki
    ports:
      - "${FUSEKI_PORT:-3030}:3030"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030/$/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: template_backend
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-template_db}

      # Fuseki
      FUSEKI_URL: http://fuseki:3030
      FUSEKI_DATASET: ${FUSEKI_DATASET:-template_dataset}

      # JWT
      SECRET_KEY: ${SECRET_KEY:-changeme-super-secret-key-in-production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}

      # App
      DEBUG: ${DEBUG:-False}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:5173}
    volumes:
      - ./backend:/app
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      fuseki:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for services...' &&
        bash scripts/wait_for_services.sh &&
        echo 'Running database migrations...' &&
        python scripts/init_db.py &&
        echo 'Initializing RDF dataset...' &&
        python scripts/init_rdf.py || echo 'RDF initialization failed, continuing...' &&
        echo 'Starting FastAPI server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # React Frontend (Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: template_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    depends_on:
      - backend
    command: npm run dev -- --host

volumes:
  postgres_data:
    driver: local
  fuseki_data:
    driver: local
